# -*- coding: utf-8 -*-
"""Task_3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_sksy8Df_A1LT4rqYC2XpXAc3vcwVXBK
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import LabelEncoder

df=pd.read_csv('/content/IRIS.csv')

df.info()

df.head()

df.describe()

df.isnull().sum()

plt.figure(figsize=(10,6))
sns.histplot(df['sepal_length'])
plt.show()

plt.figure(figsize=(10,6))
sns.histplot(df['petal_length'])
plt.show()

plt.figure(figsize=(10,6))
sns.histplot(df['sepal_width'])
plt.show()

plt.scatter(df['sepal_length'],df['sepal_width'])
plt.show()

colors = ['red', 'green', 'blue']
species = ['Iris-virginica', 'Iris-versicolor', 'Iris-setosa']

for i in range(3):
  x = df[df['species'] == species[i]]
  plt.scatter(x['sepal_length'], x['sepal_width'], c = colors[i], label=species[i])

for i in range(3):
  x = df[df['species'] == species[i]]
  plt.scatter(x['sepal_length'], x['petal_length'], c = colors[i], label=species[i])

df.drop('species', axis=1).corr()

df.drop('species', axis=1).corr()

corr=df.drop('species', axis=1).corr()
plt.figure(figsize=(10,6))
sns.heatmap(corr, annot=True)
plt.show()

from sklearn.model_selection import train_test_split

le=LabelEncoder()
df['species']=le.fit_transform(df['species'])

df.head()

x=df.drop('species', axis=1)
y=df['species']
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.5)

model=LogisticRegression()
model.fit(x_train,y_train)

print(model.score(x_train,y_train))
print(model.score(x_test,y_test))